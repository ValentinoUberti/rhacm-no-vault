apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tDQpNSUlIc3pDQ0JwdWdBd0lCQWdJVEVnQUFBNmN4MGMxeVU3QUtnd0FBQUFBRHB6QU5CZ2txaGtpRzl3MEJBUXNGDQpBRENCcFRFTE1Ba0dBMVVFQmhNQ1NWUXhEakFNQmdOVkJBZ1RCVWwwWVd4NU1ROHdEUVlEVlFRSEV3WlVjbVZ1DQpkRzh4R0RBV0JnTlZCQW9URDBGc2JHbDBkV1JsSUZNdWNDNUJMakVsTUNNR0ExVUVDeE1jUkdseVpYcHBiMjVsDQpJRlJsWTI1cFkyRWdWR1ZqYm05c2IyZHBaVEUwTURJR0ExVUVBeE1yUVd4c2FYUjFaR1VnUlc1MFpYSndjbWx6DQpaU0JEWlhKMGFXWnBZMkYwYVc5dUlFRjFkR2h2Y21sMGVUQWVGdzB5TWpFd01URXhNVEF4TVRGYUZ3MHlOREV3DQpNVEF4TVRBeE1URmFNSUc4TVFzd0NRWURWUVFHRXdKSlZERU9NQXdHQTFVRUNCTUZTWFJoYkhreER6QU5CZ05WDQpCQWNUQmxSeVpXNTBiekVZTUJZR0ExVUVDaE1QUVd4c2FYUjFaR1VnVXk1d0xrRXVNU1V3SXdZRFZRUUxFeHhFDQphWEpsZW1sdmJtVWdWR1ZqYm1sallTQlVaV051YjJ4dloybGxNU293S0FZRFZRUUREQ0VxTG1Gd2NITXVabU5oDQphM1IwTURFdWFXNTBaV2R5WVhwcGIyNWxMbVZ1WlhReEh6QWRCZ2txaGtpRzl3MEJDUUVXRUhWdWFYaEFZV3hzDQphWFIxWkdVdWFYUXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDcjRwYzc3NS95DQpOQTVVY0ZiMWl6UlVoWEJLL2RpRXJDSGRGbFU5Tk5hamlNRDN0Ry9qMUhhRGJrS0lVb3ZDVWc3MHY0dmwrQjU5DQpudzhuMFdCNEp0TTUwbEt0b2ovejU4YmdGN3YvbW03RFFZOXRDcS9zakNTQVN4cWdNdE1KN0dnWlhhbWdjN0duDQpCM2d2dURZamVrQ3lIWmJXZm9rWDRSNzhrQWF4dkFZTmFBVEtxN3d0Y3JxVW9LWGExVitvUlp5NFVoRVNYOW9yDQp5VjBnOUtTWnc5VG5vUEtic0hmbHJpa0RYanhLME9iQ0FYRnMyZkh6NVd5WVphQTRyRWJEdFJib0VTWGRrU1U4DQpuSWlRN1Q1eUswL3NZZE9KaHlGQXg3a1BtOEF3aU01V2MwUzYzVEpPc0VNcDhpeHBKdUFuYXdLNUtKaGw4UHNaDQpxN2xxYS9XTU5SSDNBZ01CQUFHamdnUEJNSUlEdlRBT0JnTlZIUThCQWY4RUJBTUNCYUF3RXdZRFZSMGxCQXd3DQpDZ1lJS3dZQkJRVUhBd0V3TEFZRFZSMFJCQ1V3STRJaEtpNWhjSEJ6TG1aallXdDBkREF4TG1sdWRHVm5jbUY2DQphVzl1WlM1bGJtVjBNQjBHQTFVZERnUVdCQlI5d2llNEJUT1JQVStkdGwwWDNkSDB0M3A1VkRBZkJnTlZIU01FDQpHREFXZ0JRc2lIeHFGcGJZb2k5dy9zbnNyYzJENnVxSnBUQ0I3Z1lEVlIwZkJJSG1NSUhqTUlIZ29JSGRvSUhhDQpobXRvZEhSd09pOHZZMkZsYm5SbGNuQnlhWE5sTVM1elpYSjJhWHBwTG1Gc2JHbDBkV1JsTG1sMEwxQkxTUzFCDQpiR3hwZEhWa1pTOUJiR3hwZEhWa1pTVXlNRVZ1ZEdWeWNISnBjMlVsTWpCRFpYSjBhV1pwWTJGMGFXOXVKVEl3DQpRWFYwYUc5eWFYUjVMbU55YklacmFIUjBjRG92TDJOaFpXNTBaWEp3Y21selpUSXVjMlZ5ZG1sNmFTNWhiR3hwDQpkSFZrWlM1cGRDOVFTMGt0UVd4c2FYUjFaR1V2UVd4c2FYUjFaR1VsTWpCRmJuUmxjbkJ5YVhObEpUSXdRMlZ5DQpkR2xtYVdOaGRHbHZiaVV5TUVGMWRHaHZjbWwwZVM1amNtd3dnZ0hjQmdnckJnRUZCUWNCQVFTQ0FjNHdnZ0hLDQpNSGNHQ0NzR0FRVUZCekFDaG10b2RIUndPaTh2WTJGbGJuUmxjbkJ5YVhObE1TNXpaWEoyYVhwcExtRnNiR2wwDQpkV1JsTG1sMEwxQkxTUzFCYkd4cGRIVmtaUzlCYkd4cGRIVmtaU1V5TUVWdWRHVnljSEpwYzJVbE1qQkRaWEowDQphV1pwWTJGMGFXOXVKVEl3UVhWMGFHOXlhWFI1TG1OeWREQjNCZ2dyQmdFRkJRY3dBb1pyYUhSMGNEb3ZMMk5oDQpaVzUwWlhKd2NtbHpaVEl1YzJWeWRtbDZhUzVoYkd4cGRIVmtaUzVwZEM5UVMwa3RRV3hzYVhSMVpHVXZRV3hzDQphWFIxWkdVbE1qQkZiblJsY25CeWFYTmxKVEl3UTJWeWRHbG1hV05oZEdsdmJpVXlNRUYxZEdodmNtbDBlUzVqDQpjblF3Z2RVR0NDc0dBUVVGQnpBQ2hvSEliR1JoY0Rvdkx5OURUajFCYkd4cGRIVmtaU1V5TUVWdWRHVnljSEpwDQpjMlVsTWpCRFpYSjBhV1pwWTJGMGFXOXVKVEl3UVhWMGFHOXlhWFI1TEVOT1BVRkpRU3hEVGoxUWRXSnNhV01sDQpNakJMWlhrbE1qQlRaWEoyYVdObGN5eERUajFUWlhKMmFXTmxjeXhEVGoxRGIyNW1hV2QxY21GMGFXOXVMRVJEDQpQV1pqTEVSRFBXUnBjaXhFUXoxamNuUnVaWFEvWTBGRFpYSjBhV1pwWTJGMFpUOWlZWE5sUDI5aWFtVmpkRU5zDQpZWE56UFdObGNuUnBabWxqWVhScGIyNUJkWFJvYjNKcGRIa3dPZ1lKS3dZQkJBR0NOeFVIQkMwd0t3WWpLd1lCDQpCQUdDTnhVSXZQQTdqT2RJaHBHVktJVC9rV1dHdnNkOUc0V0J1bGJBaVRZQ0FXUUNBU3d3R3dZSkt3WUJCQUdDDQpOeFVLQkE0d0REQUtCZ2dyQmdFRkJRY0RBVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBQ1h0amRKdDk1a1dXDQpRaFRwcmU3WktvUzBySWlCeGpQMDdhNlY4VXJpOTBwYTdvOEtzZXAxTGV5Rzg1MmRBd0loWTJ1WE8zOHpYV0JvDQpvTmI1d0VXQmF5ZmsydWlHVHVBSkRMQ01mSnBGTFg5ejhMeE5tQ3NWQm56YXBCdUFCVWdXRm5FZ3NnZjRWRzBwDQo2UDRIZU02aitYcjNxOTZxUWw2SEppNDB6cFQyMENOeGJGTGpoSG15bVpMQmJ6MkFBRkhUVEYrUFFqaEN3c3RWDQo5SHppOHRUYXZVMkIrU1lQcG1oY1Jvd1kvQjJPQlNQdVdqM2htaFJHSWFWSXdRa0MxMUFiUnBZQmllSW5iR3hrDQo4WEN1UnFtNzNWUUlsTzFMYlJqN1ArdDVYVTdWRFNqcXZSYTBINEV2cStFNnE0Y3NKSVVDMjdLSEpoQ05NdTdEDQpDSzVLSm81MDZ3PT0NCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0NCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQ0KTUlJSUhUQ0NCZ1dnQXdJQkFnSVRGQUFBQUFJMzRaQkwvanY3OVFBQUFBQUFBakFOQmdrcWhraUc5dzBCQVFzRg0KQURDQm56RUxNQWtHQTFVRUJoTUNTVlF4RGpBTUJnTlZCQWdUQlVsMFlXeDVNUTh3RFFZRFZRUUhFd1pVY21WdQ0KZEc4eEpUQWpCZ05WQkFzVEhFUnBjbVY2YVc5dVpTQlVaV051YVdOaElGUmxZMjV2Ykc5bmFXVXhHREFXQmdOVg0KQkFvVEQwRnNiR2wwZFdSbElGTXVjQzVCTGpFdU1Dd0dBMVVFQXhNbFFXeHNhWFIxWkdVZ1VtOXZkQ0JEWlhKMA0KYVdacFkyRjBhVzl1SUVGMWRHaHZjbWwwZVRBZUZ3MHlNREEwTVRReE1qQXhNREZhRncwek5UQTBNVFF4TWpFeA0KTURGYU1JR2xNUXN3Q1FZRFZRUUdFd0pKVkRFT01Bd0dBMVVFQ0JNRlNYUmhiSGt4RHpBTkJnTlZCQWNUQmxSeQ0KWlc1MGJ6RVlNQllHQTFVRUNoTVBRV3hzYVhSMVpHVWdVeTV3TGtFdU1TVXdJd1lEVlFRTEV4eEVhWEpsZW1sdg0KYm1VZ1ZHVmpibWxqWVNCVVpXTnViMnh2WjJsbE1UUXdNZ1lEVlFRREV5dEJiR3hwZEhWa1pTQkZiblJsY25CeQ0KYVhObElFTmxjblJwWm1sallYUnBiMjRnUVhWMGFHOXlhWFI1TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQw0KQVE4QU1JSUJDZ0tDQVFFQW43R2g3QkFhb3NISURKMDhiTWh5UkVCZ0Y4YVNaRzNoYnkrYXZHSXIvdTBXYlFJRQ0KZVkvZW14eW4rOWhQVUF4aDIzc2t2NUJvNm5GRlVNamI2SWZDemNyUUs4bUFsTHRkVjBYVTEyYWF6NktUYVFFbA0KZVRYRkNGVkRSbHdKc3NRaWtFWWJzcTJGbGhjV3lPZ3VQMk1UTkRNUDFiU1c4dzV0eFg2WHpSdXhkM2ZLUDR1Nw0KeVZHdERFN0RwZWpLd1FPNnE3enI1SVFzc2NKaXBMWnFjTVAzRk5IdjJxNU4zeHVYQlg0eDRPaEFlNDAycmlPRA0KOW9MOUcydnBSR3V2N0VCTDdPTXpETk5oVTA4bFNqaHFaS3JncGJxKzdrMCtYQW5BVlR6cTF2ZDBUOXlaZk1hUQ0KSnVLQWpRNmlOR3VFQWZhQUFjdTFSZHlNNFZQaDI2MnJvTitSRVFJREFRQUJvNElEU0RDQ0EwUXdFQVlKS3dZQg0KQkFHQ054VUJCQU1DQVFBd0hRWURWUjBPQkJZRUZDeUlmR29XbHRpaUwzRCt5ZXl0ellQcTZvbWxNSUh0QmdOVg0KSFNBRWdlVXdnZUl3Z2Q4R0NTc0dBUVFCZ2pjVkt6Q0IwVENCa2dZSUt3WUJCUVVIQWdJd2dZVWVnWUlBUXdCbA0KQUhJQWRBQnBBR1lBYVFCakFHRUFkQUJsQUNBQVVBQnlBR0VBWXdCMEFHa0FZd0JsQUNBQVV3QjBBR0VBZEFCbA0KQUcwQVpRQnVBSFFBSUFBb0FFTUFVQUJUQUNrQUlBQkZBRzRBZEFCbEFISUFjQUJ5QUdrQWN3QmxBQ0FBTFFBZw0KQUVFQWJBQnNBR2tBZEFCMUFHUUFaUUFnQUZNQUxnQndBQzRBUVFBdU1Eb0dDQ3NHQVFVRkJ3SUJGaTVvZEhSdw0KT2k4dlkyRm1ZMlJpTWk1elpYSjJhWHBwTG1Gc2JHbDBkV1JsTG1sMEwzQnJhUzlqY0hNdWNHUm1NQmtHQ1NzRw0KQVFRQmdqY1VBZ1FNSGdvQVV3QjFBR0lBUXdCQk1Bc0dBMVVkRHdRRUF3SUJoakFTQmdOVkhSTUJBZjhFQ0RBRw0KQVFIL0FnRUFNQjhHQTFVZEl3UVlNQmFBRktuS2V0N0Y5Tk9OcVNGb3NYRG9DWS9BMS9WU01JSFdCZ05WSFI4RQ0KZ2M0d2djc3dnY2lnZ2NXZ2djS0dYMmgwZEhBNkx5OWpZWEp2YjNReExuTmxjblpwZW1rdVlXeHNhWFIxWkdVdQ0KYVhRdlVFdEpMVUZzYkdsMGRXUmxMMEZzYkdsMGRXUmxKVEl3VW05dmRDVXlNRU5sY25ScFptbGpZWFJwYjI0bA0KTWpCQmRYUm9iM0pwZEhrdVkzSnNobDlvZEhSd09pOHZZMkZ5YjI5ME1pNXpaWEoyYVhwcExtRnNiR2wwZFdSbA0KTG1sMEwxQkxTUzFCYkd4cGRIVmtaUzlCYkd4cGRIVmtaU1V5TUZKdmIzUWxNakJEWlhKMGFXWnBZMkYwYVc5dQ0KSlRJd1FYVjBhRzl5YVhSNUxtTnliRENCNmdZSUt3WUJCUVVIQVFFRWdkMHdnZG93YXdZSUt3WUJCUVVITUFLRw0KWDJoMGRIQTZMeTlqWVhKdmIzUXhMbk5sY25acGVta3VZV3hzYVhSMVpHVXVhWFF2VUV0SkxVRnNiR2wwZFdSbA0KTDBGc2JHbDBkV1JsSlRJd1VtOXZkQ1V5TUVObGNuUnBabWxqWVhScGIyNGxNakJCZFhSb2IzSnBkSGt1WTNKMA0KTUdzR0NDc0dBUVVGQnpBQ2hsOW9kSFJ3T2k4dlkyRnliMjkwTWk1elpYSjJhWHBwTG1Gc2JHbDBkV1JsTG1sMA0KTDFCTFNTMUJiR3hwZEhWa1pTOUJiR3hwZEhWa1pTVXlNRkp2YjNRbE1qQkRaWEowYVdacFkyRjBhVzl1SlRJdw0KUVhWMGFHOXlhWFI1TG1OeWREQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FnRUFHRTN2ODdscEZuK1RjWEtLNnovZA0KOUFmSTRML3VKSGlKZGJaK0h0SVNYa3BsVUtvNHFMSmc1SUlLWDBZRmFJVjdWci8xOXYxNTJWUFNuWU94Y2tNVw0KRkJFWVR0OWlqRUJLM0lBWStSTDlWejJ4WjRuWURJbitpcWkrTVNmcnVvN0UwUjJDWklpcUswSDlwYlgyV3Q2YQ0KK3VrT1ZlWk5RZ2ZqVS8wR0FQWjJlZVRpZGRieXdFMTZrdlkxaWRKUEk5c1E1Rk1zaFlrUTVCOUtnQlVKUzJUNQ0KcS82L0VzMkxHYVhFMEFCaWxKdGs0TjF4b2VBb2hpVm1yVHVoVVpmNllaMUNaZzJ0REtHQ3gxTFQvVDlZQjlPdw0KT1JGL0hYWlNJOTY0cjkzTnBBMDhtdEFOdkt0M0Q1MHhrU2lBdzdNTy9aR1JKZE56eFF1bm04MnREWGxPY1pHVw0KMm95SE9mRlRSUkhZeEdSMXJQUjZCU0lJbnFvQU4xamNwdFlQQ3NNSzAxR1ZYeHVLUDRRTTgyd0p0UVZoaWZBdQ0KTDB4LzRhU2hhZ01ZN2x4YVZHV3dIRGZFLzlTQnZreUF3ZHRRMElCd0RveVpyYllUT1VEbkEyVVkrZWtkSGpQbg0KQkl6Q1lIRGVYU2FNaVdwam5ZYUUzSkFVcCsrOTlnZkQxNXVGOVBQc01jTkNDV1h6ZWZlWURrcjNGR2pQTitwUw0KVHRjZm5lRGpzaVdmclZScmpqbUNEYjhwRU1lVHNCR0ZnWE5RRXRwZkx0anNhNG5aMmczaTArbkllSTF3SGNxVA0KNUVKeVRIT2Vtbkx5WHVRN0lCRjNtUFBmTThUaEREcTBibDlpTWtBMVRKWHlKUGJJa3VEZmQ5TmtlYVVXNHVkTA0KQzJEK3B0RlZEaE4xWFlPZTBNVlBJR1U9DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tDQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0NCk1JSUdIVENDQkFXZ0F3SUJBZ0lRYWdoanphVjR4TFpEUXVFVm9lcSsxVEFOQmdrcWhraUc5dzBCQVFzRkFEQ0INCm56RUxNQWtHQTFVRUJoTUNTVlF4RGpBTUJnTlZCQWdUQlVsMFlXeDVNUTh3RFFZRFZRUUhFd1pVY21WdWRHOHgNCkpUQWpCZ05WQkFzVEhFUnBjbVY2YVc5dVpTQlVaV051YVdOaElGUmxZMjV2Ykc5bmFXVXhHREFXQmdOVkJBb1QNCkQwRnNiR2wwZFdSbElGTXVjQzVCTGpFdU1Dd0dBMVVFQXhNbFFXeHNhWFIxWkdVZ1VtOXZkQ0JEWlhKMGFXWnANClkyRjBhVzl1SUVGMWRHaHZjbWwwZVRBZ0Z3MHlNREEwTVRBeE16SXpOVGRhR0E4eU1EVXdNRFF4TURFek16TTENCk5sb3dnWjh4Q3pBSkJnTlZCQVlUQWtsVU1RNHdEQVlEVlFRSUV3VkpkR0ZzZVRFUE1BMEdBMVVFQnhNR1ZISmwNCmJuUnZNU1V3SXdZRFZRUUxFeHhFYVhKbGVtbHZibVVnVkdWamJtbGpZU0JVWldOdWIyeHZaMmxsTVJnd0ZnWUQNClZRUUtFdzlCYkd4cGRIVmtaU0JUTG5BdVFTNHhMakFzQmdOVkJBTVRKVUZzYkdsMGRXUmxJRkp2YjNRZ1EyVnkNCmRHbG1hV05oZEdsdmJpQkJkWFJvYjNKcGRIa3dnZ0lpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElDRHdBd2dnSUsNCkFvSUNBUUNrZkl3SjFwM2o4WU56WFhrUGpQMUl2bVlveW1qUDVvVUQvWFluOUtoSWhScGZyaEQwVGthbXR4TmUNCjFvQVlkamsza20zYm5PYk5BbldzTHVkODUwTjc1SHpCM2krZFpPcVFMWlIzQ2s2MGlvZmNhTW11VkVhSERiTWYNCnd1TVExSTMvQVFFQUVjKzRkZDhwMENMcSsxT3lRWXAwaGdwb05YQ3MwY1NqUG5ldGZPS3o4RUxXdTR4ZDd3WmQNClJnb3YxV2lGckxyS1c4MkZyTkh0NnpXdlVTMllYd2FvczJWcDhsdWhna1pmZ0N1TjJXRkQ4Y2pWTk0wa3MrRjMNCnRLbUMvVmYrQUs1Z05jaTFTaGlOcWQ2cDNUT2paM3ZidUFTQmhEL3FWVDdzYVcvOEhnLy8zQUNVWmZoZldHMWMNCkc5dVJhczJlNzYrWU91cGlDMWdRY0w1dWUrY25IR29hVHV3ZGRuZUo5dTh5TGdGQ0kvK050SElTdDNSSGx1aEsNClk3RkNRbnVkZjBDS2g4MzBWbHhvVlFLeGlRdEl3dGsrdUczK3JZQWMzZ3pLR2wvQlFTM1NOTDlCckM2RTM2djENCk9LbXBNQW9heDF4akc4T0JDdVpaSExYcmw2YzAvT21sVE5CeEJCWktQaE1iR2NnOXFXaXg3U3FKVkhpeE55ODMNCk8zbE1jc0hMdE9qSDF2RWxMRHpPUEg0Rm52cU9Rd0ZLYVl3QVI0MlJWNStoQTkwYy9jUjhpbHFlVko2L3pjRlQNCjZDSzlCUGlLQjcvRUFIbHJ1aWlsdStTL05BQm9aU3JFV2hsS3QrY3YzeVBUaUdXdU1LeW03U0ZPVS9vTEU3eFgNCjZaRUJ2UllyUUFlaGJoNlhxZG1VWFR4UGhmMVFjK2tBNnJxNm9ra3V0NmwvNHVLWllRSURBUUFCbzFFd1R6QUwNCkJnTlZIUThFQkFNQ0FZWXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVxY3A2M3NYMDA0MnANCklXaXhjT2dKajhEWDlWSXdFQVlKS3dZQkJBR0NOeFVCQkFNQ0FRQXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnSUINCkFER0pXRjRuSGVMZmtTY2NSUzZaY2RpTkVHQjdRem9LWHZzQk9PWE9vUVNraExvMzR6a1R4V0hpS0F4WktHbkcNCjd2cklBQzgxUmlOSUlRQmhDK1RaQkhSeE13N2tPblhkUFFyYVMyWWxRTmQrc0dzS2JGUlArSDFYak40NWNCZWcNCnZuYjBnelc4ZlFEMEJsMUVwN29qa2tlWUJMaUlWVE1jSGt1WUxyNzB5SG9nL3gyZGxsNmVKMlpFOUVZMXRLa1INCkxNeTFvQUU2Ni9ING4rd2ExUUxoNS9sZnUxWEtWY0lHblZGTEpBdTM0alRUSURTQlFSWGM5M2N4emdFT1h3dXkNCkJ1NHJDT1JwM1YvVlppd2hXTHl5K0l6QUk5elJsNlFTb0EzMnVDeHVQY2tVMUxVZ1JnVEVzRk9zVnZ5dVgvekgNCjlGTUI2RmxTYk1wM3NBa2Z4ZE5Pa2dhVXdzTWJ0UjNlQm1QTkxXMmZHcEdISjAyY3hpWDNFMklSdDZkRDVkZWQNCkllUi90RENzeS91b21NaHpQSDd0ZnVta1UwTndpRzByTy9yM3dGZkRVa2V4K1d1enFUWWs0TFNiT2JsRjJYUEkNCm9IeEE1SVpYL3RoQnJ0ZVk3Y2NnVzJSYkFsU0sydVk0V2ptSGNEQk44YlQ5dnl6S3EvNTR0Tll5WENZcDlXYnUNCmZPSUVKVFBQOGtRZmZhSHlNNmRoRUFpMkdrTmorZ3doMkNDNnBuWUJoT1FUNXZoY2xtSGoxdHUvYVNCSEJ3ekQNCjQyME5YUy8zY0hxTXVmbmFHNml2UGxCZDRmMUNhSlNrUW16MldwcVNXT2lYL0IwYnJjbGk4QndpdEFKTEw4bkgNCkJnMmZZK3FJeGRnRHM1Yng3ejdsdlhnaHVldnpYd2xzb1NyZUw3OHBwNUF0DQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tDQo=
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV3QUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktvd2dnU21BZ0VBQW9JQkFRQ3I0cGM3NzUveU5BNVUKY0ZiMWl6UlVoWEJLL2RpRXJDSGRGbFU5Tk5hamlNRDN0Ry9qMUhhRGJrS0lVb3ZDVWc3MHY0dmwrQjU5bnc4bgowV0I0SnRNNTBsS3Rvai96NThiZ0Y3di9tbTdEUVk5dENxL3NqQ1NBU3hxZ010TUo3R2daWGFtZ2M3R25CM2d2CnVEWWpla0N5SFpiV2Zva1g0Ujc4a0FheHZBWU5hQVRLcTd3dGNycVVvS1hhMVYrb1JaeTRVaEVTWDlvcnlWMGcKOUtTWnc5VG5vUEtic0hmbHJpa0RYanhLME9iQ0FYRnMyZkh6NVd5WVphQTRyRWJEdFJib0VTWGRrU1U4bklpUQo3VDV5SzAvc1lkT0poeUZBeDdrUG04QXdpTTVXYzBTNjNUSk9zRU1wOGl4cEp1QW5hd0s1S0pobDhQc1pxN2xxCmEvV01OUkgzQWdNQkFBRUNnZ0VCQUlKVFZTNEp1M0d1aktyelhzdmdsM1g2a3pFWkZjRktyb1p1dDRTbitwS1cKVHhIQnl4Q28rSThnMit0M0F5Yjhod0NGOTdJUGxqYlRrbTh6YnZ6TEcxNzlITmt3YTJNbyt2N1FvQ2ZtMVZMUQo4OG5PejZNQWczQ1BBWW96M3hYb0hPb1d2VlcrUXhZTk1OQ2wwTTdIbENRNUVUUmpUdGsvUlBwa3pkNlhYTk51CkxCQUp0M2RBcEc1MTNUTzdMdzlMUm84Ujk4L0NzR0RDQjZzTHBkZ3QxRmgraHZwQlVZYzEwL3hoTnRtYXVKdDIKUjBvdHpMdHpxekdjN3JNQkVsWEl2N3BRUGsrWHBwSDJ0aVdjM1VXS1J0MGVvOEpTNjNvWDZwTFhjeG1rSW9IcQo0bzFMNFJDSjJ5K0FZTHorc3NVUXlVY09aRmYyWmlxWVRCbkVEZ3V6ZFdrQ2dZRUEweDI4QkRDOERZUHN4Szd6ClV6d2FTY054ZlUyWnNhdktwYTlzWDVGUTA4Mk41WlBlWXNkNkRrNFZ0amovbTh6aHVrd3FrUG5FbFpndVBJVDkKR0NyNlNEbkQzM0RjeTFLK2h5ZEdrUWRRcXRWRzRha1pEUExGMXJFTmFyUUo3WVNzY2xPdnFjREU4aEcvUGErYwpIUDBiWUlSdkFyQTBFRlhraFA5YUJLNWlTcDBDZ1lFQTBHMm9VbW5tcldaTE5NMmt3aGd4U21jWWtCZDFYeHR2CkpKaFlPV1FIcmJKemRHOG82dmZUWGdRTnlxUTVoaEdhbFROUm5hWWl3Mmd1Q0RpVkVoemlYWnozVUQ2d1ArRE4KdlplY1RxN3RlbGs3VGR6cHR0TVZITlZyU1VsS1VDKzczZDF0QUpCMW45dndyYnQvVzM3OUxUcW9DbTJhYmhNcApFaFlJZFJNQTBLTUNnWUVBejRJZGlUemh5cU1PZWJEQTZPSmRzSDFUc3Vjd2w2dVZEMUFqUkxoUDZ5L1ROb0ltCmg0OHNrSno5eUZPMElzNjZYT1I2dm05U1kvdm1Eb1JsUlhrUTh5Y2NPU2IxVDBDd2w2WHFQYWtrQ0JhRWlsQXMKbUVhVVlWYzhLZEozSTZoUjNEb1hvdElnZ3hNZ2w2Qmg0VGlEelZXK3k3U29LQnBVK01rSkVTcmE0QjBDZ1lFQQp1YTMzRmZSaUhIZlU1K1dMc1ozN3kxeXM5VER3enhtUm1maGVJRUtNMUtEMVdmVHRidVg0MXZpbGtMRmN6YU5CCkkwbmttNTAxdXY5RWd1NWxYdzE4WEFsS0NhTFBRUmowTU1LdjdTakpSd1hYWHpZK3Z6Q3N6bE1Ta09kSjNNV3AKaDYyTFBjVjBCRVhiMCtvRk8yMlYvb1VTenJkMXJEcEZqR2MwZ1plOFVpRUNnWUVBc2o2aHcrNXIwQkNuWW00aQpPL0M4emtnUDVNb0wrZENDZjUrVjdEZm83eDVRUksvY3Qxa0JoTG9uWTdnT0pxRThMT1RUK3plN0RCQ0hCZTQ0Ck5pUjFwVzRHMUxMTjZiMlR2ZW1MMlV1bzlQV0RPS3FucStvZDRhaktRb3Fpc1dUNDYzSDFzdm9aY2hKaksrL04KTXJmUHBOOGtpL2RKaFkzWWthRmJINERjTVVBPQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  creationTimestamp: null
  name: wildcard
  namespace: openshift-ingress
type: kubernetes.io/tls
