apiVersion: v1
data:
  tls.crt: 
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRRFVUZUp1bGh5RTNFS1UKTm9HbklDZzE0SHdXV00rYzJDS3NoU29EVFc0bXpEWFBwSEwyUU4vcXQzR2htL1BpU3lpdFlKa20zdUkzYzlwUApQbllDV2xPNG5MSlRoM29pNWVYVFFvYkN1OHViVWRRTUlrWkJ3eEMvQ0YzclJSbHpYYXU5WmFyMWxHNWttclRuCmdsM2VPdGZwbTI3TTEwYTluYU00RTdpdEhKbVFqdVArTks2a3N4WFBrcE5JTUZzb0lxdjdUd0ZWdzg0QWtaKzUKMEc1bHNXeERER08zNHdTbThHSlIxd3N5K3hQSVZ5aTljZnFZMWRrZm55RFM3NXVzNnVlNlNPUllnRU1hOHVIZgpZT2dhWkY3bFk3enNsVnkxN09pQnhxM3ZrMlVtK21GK0dVYjA1K0lTOXBmMUlNL0YvV0FCaEQvMUFSS3RYbzlmCkhBT3JycklEQWdNQkFBRUNnZ0VBRE82UmxGcmdjZGRZMXQ1YkYyc0dDQUljak4vc0JZbkUwdTFwbWJubHM4ZE0KbjlGTWoyTjBRRC9jVkJQRHowejB0VnJrK1ZFcVJtWndMZE9JTEt5RDNRTHVlZGdPd0lGd2RtWGUvNDJnNFYwaQpwWHFRL1FCOHpLWWQwbTdyRmZQbXVpcXZOelpMWXlWcFQ1REpWdmdPbnRRdzg1bEpYZE4wVmI0ZHlhMnNUUG5LCnpPWDFBaG5qUU4xOWN1SUxJcFZrd0MzZTEzZDZNSHRiajNaelNmV2NkaGhxYlJ3Y1VzV29pMHdaWWF5cUxvYXUKUDhaQmlXUEQzUWxYZjJoWHh6M2Y5UEcwdi8vWFlOdWgwbmdYV3kwYTBBdzZxZllhMGdWTlVCeHM4OWFZTzJ2dgo1clJWVVNHN2RWRHBwSnZhUFF4SnBLRFZla1hoV0k1dC93VWlSY2x0QVFLQmdRRHlwR1BzZjRWbjc3Z3VrUVpQCkFxNVdNNTlyZjBSaWxNUHUrenA0bkZRVGU5dFdXbUEwQVBqYVQvREJNWGdyNHlaZEJSRFQ2U3dQNWo3blpPcWcKWUEvZ2ZUb3NXRk9FaXVvYk5oY2hrd1hzcTN4K094TTliOWsrUkZHaTV3K3lQR1hrOWxmZDVxMTVWRjVzMmxxVgpldHNnY0lmUlp0Y3FDSlJha3JIWnNyTXFzd0tCZ1FEZi9lOXE3VlJUWjhIZ1ZMSWdYdUVqcUx4NVIzaWs0ZlR2Ckp4MDQ5M3F3eCtlbjhkNk9CczFBSDF0NDFZUXlsNnNhVC9KQTM0dzA2SDg2YUdMcTZQZEx6Wi9MNWpxaTBIdUYKb1BVQ1YrSnNRS0pUVkpudGdJM08xTEE2dWs2WW4ya3QzaTl6L2Q5UEozd0V5VjBobkVsU2ZWVU00WkpWZ1dmTQpUZ0p6SmVSRGNRS0JnUURMVU1wV0NraTczZGZFVlVzbSs0VWZ3Q1B1VEhiOTc4LzZPVk0yYXkvY0g2V2J4eURqCmtvanpUWmJjRzFxcDA2MTZ0bHJ5Wm1qQWJkcjV3OHNDVlZ3WWJIWkpZRDJqUzA5OU82YklRRXp2a29ZL3M3cWMKZVZOYzVKeFBWelFFMHExQzNOU2xvTHh0ZFMrbUlKVlV1ZHhSWTFtN01tUksyV09PUFd0L2traWxGd0tCZ1FDUQpCM3dVMklpNW5PVTR0NTFXWFV3Tm51bWFYby9BRGg5dVRFdHBIeEZBYlRxVGJsNTZHdnVOK052YnBnZjhkRFFzCmxpMmk4MXYzaFd5U0JSOWVCL0ZFUi9NeHJGZ1Y2MU1TQ1A2aXhCb3ZHNXlGVXNncnhOYnFvUzYwaEtvWFQ2SFYKUWFKbnhsMzZTdHhmUTQva0ZkZTcrQ1ZoUkFiUmZvVmRCT2hrWElBYnNRS0JnSDZneHk5Ukc3WG1zNy9mMWd5WApUTndQOGVKeVFRZldpckY3VThpNURFWG02aEdrSFVzODZ0RTJ5a2hEbkExV2JkdW10dHU4VEFLRVVscGEvTXM2Cnl1QlM5NkNMSms1M0lGTnIvWEtsRHk0dUZGOUs2Tk56cVg3Z3UycmVYRnZyTm9lbUZnOEYxbk5DeVBoM0hFT0kKQUgwSmpQeW1TOE9JVGlFcllOQzNGN0l0Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
kind: Secret
metadata:
  name: api-cert
  namespace: openshift-config
type: kubernetes.io/tls
---
apiVersion: config.openshift.io/v1
kind: APIServer
metadata:
  annotations:
    include.release.openshift.io/ibm-cloud-managed: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
    oauth-apiserver.openshift.io/secure-token-storage: "true"
    release.openshift.io/create-only: "true"
  name: cluster
spec:
  audit:
    profile: Default
  servingCerts:
    namedCertificates:
    - names:
      - api.fcakgt01.gestione.enet 
      servingCertificate:
        name: api-cert

