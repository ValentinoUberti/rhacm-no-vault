apiVersion: v1
data:
  tls.crt: 
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRRG5pd0liaHlra3pmRFQKeUxYdDVhdjNtbTBZcUJQT2ZhbnEyNHJCNTJScTd2SjBLa3Z1Y2hPT1RSeEcvYnlhdENoSTdIamJTaXZjSVhQRgp4Tlg5cVZ1ZFpxRXAvMzBXUHdGbStQQ3J0WmFlMHgxVzBIYWNGUjFtaHFZa09jQmphSmEyNERJZlQzUmYrT2V1CklCbERzM2QzL3kzVTUwRSthc1pqcXp6SEtaOWVNbnBiTFVkbW1hZEFsMmdrVmVHK0M3K1BneDUzSkRScXAxRG8KTytDaWJRZTV1bWFHZTR6QjZRQnhTVjBmSGd2V0F3UW1GTGRlVGFrcjBjeUVoSE5kRkVjanB6MjIwckxzSzBINApvdWZKZk5Yc2tXejVyRzNGNTJ0eE8rV05FMk5ZeFJGazFyWW1qRzNSaXcxck9DVCtQQ2RFMGlRQmw5RXZrZDRiCjhFb0tWQlhkQWdNQkFBRUNnZ0VBWU5Dc0NleWpGSU9UL2tuL1lFRFhmZ214TWswZE13c3lZRVI2S1lmaVlpQVYKZXVNd3FyeENWdzhCRXVJSDJid1kyQjBnajdqY3pBZWt5LzM0NkQ3SFV2SlYweVRFSGVnc1l1MFdYUVhwdS9GVQpaRGQ0VU4wM1ZPWmFVKzFkOTNNRkNlU0dzTGJkVnovUlIrcWVCY1BsNFdQdXV3WVRMdEVnc1E0cHRMRS90UGVrCm5UWUpTK1ZKNEhmc2s0UEpNNnFrN01qZHRvQTdKSWNMM1FUNEM3V3cvTDZFOXhlRThjOXU2NGViYWJPNVYzU2cKNmtab0F4MzlWY05EWjdKMVdkN3VBbkFKS3YwOFpGNlpuK3Q4aVh4WHp1WTZNTXk2N0tvVE82SDRzamQ3QmpQTwpWbExNM0pTMHg3aXYwYU9yVlN1L2QvdXlWQW9FRUVWTS9MVUdxSWNTSVFLQmdRRDhLMjFEQVE0MFFjOFR3Ni8xCnlNMVZhYWdlOHI1L2FNNGFnMmFsTU9Pak1Ga3NCWlJzWnhrV0d6QXR5SE9mU1JDMXBZdmNOZzVCemg5d0owaTUKKzJCdGNaQmtDYzBZM1grT25TbGJxa0tXY3ZMZnBlWDBhSUZZQWNldDVYb0x5NVUyMWQyU0xzNmxWZzFVTS9ELwo5TnMzSG5yM1pLbW9WUUlBaVliNFZtbitwUUtCZ1FEckQxK3lLeXVRaVh4WFRDaGJvMHYrRU5aN005QTRFYW10Ckw4cFd1YXRIZGN0TkFTQ1BtTUYzTzcxVFBMUHhjdVJQRGQ0TEloQXZVMDJEQ21ZUDFIQmE4SHY5cmd1MU9rZUoKQ0hOMkh5bkxPdEpoZ09PRlpNbk5uWnh3OERhSnppbVVoNEh6OXZxMVpJRmNvaHZrS3I5b2Z4a0V6TGlTbWw2UQpyWEFVVWdXTTJRS0JnQXlYK3AvekNJdVJrYzd4NGZMTGNYM0hoZzd0bnBmc1d3YTE4MFZpdUt1b3VYdGFWL3hGCjlkbkZ4OVV4Z3B5ODRHbkI5OGNxcC9HZllyQ09OYktjSEVlNitUUVZ6VGxscm40bjJTM3J4ZUdQb2hPTFRIMjEKVG1oZnhtSW42TDE0RUY2cHRhUWNWRk9yaFlUa0J6QXhRVlZ5WHovRnRqZGk3M09wYXFVeVk1N0ZBb0dBVUhwVgpBMFV3aHkzck9tQkN1UTB4cVd6T1lpUWROL1VrS0wxaUEwdFNUd2NQY2UvZTNBc3F3YzNjUmpGVVVtaEpycDlLCjFIajNIWnpodnVuQ2c4enlJdENQUXcxaHlNeUpUV3R0VEpYaTAwZnlXNXVyU2pKMXZVWW5GNnZHb0d2TFpLVDQKWXpTK0pYaWhxYnQrM1NHZG93TlE1NG5INzdtV2d1WStwMVpsdkJFQ2dZRUE1dGFJZTY2enYwQW9La055NjZQTQo3dFVBU3Zad1NlSjRENDcxTjJFazlXSk5KNDVqL1Mza092cnZ0bnZNR0JjVER2VTlBY3N5aDVSenZCTDIzVEpOCmtTbDF4NXBxK0RHMVZBUSt5ejhqQndlb01XK1RQa1h1RTlnZCtaRDRKeVBvN1plTHcrV25hSTRiS2MwZkQwWWQKckh0SW1jcVlqbW1XY0NTV3lYUW85UGM9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
kind: Secret
metadata:
  creationTimestamp: null
  name: api-cert
  namespace: openshift-config
type: kubernetes.io/tls
---
apiVersion: config.openshift.io/v1
kind: APIServer
metadata:
  annotations:
    include.release.openshift.io/ibm-cloud-managed: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
    oauth-apiserver.openshift.io/secure-token-storage: "true"
    release.openshift.io/create-only: "true"
  name: cluster
spec:
  audit:
    profile: Default
  servingCerts:
    namedCertificates:
    - names:
      - api.fcakct01.collaudo.enet
      servingCertificate:
        name: api-cert

