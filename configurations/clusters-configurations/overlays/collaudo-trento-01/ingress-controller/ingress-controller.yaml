apiVersion: v1
data:
  tls.crt: 
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRRFNiZ001UnJiOUVjZkgKeXdQcmhRL2RPc1pFMUFPS0JLQlRBTG5nTGtUWjdyRE5IcHJBRDFnVGpGOTYyZ3h1cUc1cEFXaUdnZjBHL2c1Qworck5MUmYxTDVveVhEM3E0OVpPM1hsRTJSeHNqMHVXd1BGT0Zob0pFSVhIVExYZVhDRGUwV21iTTkvVnBsdTh0CnRIa2U3UkVzYndzQWZQOWtnanplamZadDlvSS90bXYzUURIRjlSRlhGSnhCcEFHOEFUUUt1QXJoaTZEd3ptSWEKSVJNRVBVaFk4bDN1MWNDK0owVHZQVW5QbXJqME1mdmtMR1hseVdYSDhpTlpEOUNjRDljY2N0N3NjdVNaV0pEbAplMHNVcVo2RE9Eemc1b29zQlZxaGtkZ25aK05hN1JmNjEwQjl5cDlFeDgzT2VDM1c2QnFhMVkyNlluSVJpWlFECnVhbExtVUxqQWdNQkFBRUNnZ0VBRUl1bjR6d0ZMVmJWajRjTjh0bk9pb1dSaTEza1BWanB4ano3WUg0aTJjUGoKME8wRUcrL1k3QWlRaFZkWnZPV3ZjTUEwbU1ibHYwUUFtUkdmUVY3cWNLcGJDWkdsQTZBRGtscHZKa1puQXVVVgpQRXN5QWdDMmcyYmh6VW40Nmo0eUt4TWtuQjh2QTdOamNRT010bnJMYStQN1NIbUxsenFLVUxGMjIrU1REekZECk9ONjNDUnhCYzVSR2c3WHh0U1IxQld4TVBXb2N6YUR5cndtWXRGN2F2VVNnRTNwUnQ3eWRBYm02N3FCZTkyWkcKVkNPaEY0T0ZLMk5CMXBETmN3aWdqbUgzbWU3MWpoQk9RaWJyS29BL09XY3JQZmFHclVCbVNsTHBoekRIOUw5Qgp6eE9WQ2g3WHN6K0lJcWxwdTM1MXJxRHg5SGJUUzdWY2hxT3N6THhpS1FLQmdRRHlyODMrK2ZwSjVKTG5kK0o1ClJoV2R6alNZbWZ2aWdjZkVLSmZ3ek1Od1ROTjBKUHlUSUVteGZTTjFMVFRTSStMc1F5STI5NXdZY2VnZy9ZdmkKek9oZ2FiMHR0cnJRSy9PTVBLZDNmM0ovR2NzMzY2UEJndE9XNTExSDNHSGZWcnEreGJsbFMydEtzNnBlOXhXcwo5cGkxT2xESjQrZjlkQzVYeDg3TzY3SEJMd0tCZ1FEZCtUUWFkbDNwZkhUSTZMdS8yV3V6ODJzcmMwL1lSN0VhClBqbzBqTmtHWkh1bCtHMnBVUXRMU3piMXdNbDY2NnVneGRyRy9qNG94cjNLQjRaUUZYODM4N2J2WFR5QWV0Q28KaDhnV0ZWR3FWWHdYQ1BJU2NrdGZWcFpYUVd1QkZYbURFaXdieTVjNm9TWm43UjRHYTQyV0c4ZkJDUkF6emtJaQpwaDl4THB6a2pRS0JnSGNBVGZxaGlXR0NlNmFVMnJDczlSeVVhS1lMbTcvTjg2NzBXTXp6RzBLTjZZSWlRTmZFCkZWNjdCaEFIUXNkb1lYV0kxZFl1UkpTWUJrTm5FSmo5OFZTVmhQWk5pLzFZRCt6TU1USWZoSDFlb0krak5JRkgKTFlucG1Zd0xQTkxQTEhNdmNXR0NRZkkzZDJ0cHJXOUszRWJCZWF3RjNWUWpERFp1KzdIclVSWnhBb0dBQmFTSwpJSW9WeFJPMjNFeWVTVGc3dHExZmNoRlNYRXNtUTJhRmtFUnNWKzlCL1d3ZFRZcVQ0T3dlajR6QkVuRGZRZzBGCmpMMTEwdytLVDVKMVpaL0dSaVBaNktmVUcrZ0RXZVZwdnJYNEIzNTQweFVWSWticGg1anA1WG55UTZ2S0ZQem4KUmlXY3lJN0VMU3duOFQzV3NaUXZOY2NITkdudjRIV2Nvd0h1VnhrQ2dZRUE3V0E3REtNaktUdkIyS0VuVXRRdwpCVWlqVVlMclFUeUh2MWNBSHY1UEJuUU52NFNVSzJFZW5OOU5NUVpkMmkwZTd2QWJxOGtHaHRaeXlHUE9jSXFQCkZoNTNGYldLSkNwS2EyaWNoVUF3Tm9zaHpWT3lKeWI0Yjd6OEg4YnYxSWFWY3d4QlV5aDlHZXR0NFN0MElRdkkKRUdnT2x1cFlkelRKYlNjUHlFQ05tc2M9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
kind: Secret
metadata:
  creationTimestamp: null
  name: wildcard
  namespace: openshift-ingress
type: kubernetes.io/tls
